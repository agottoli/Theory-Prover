digraph {
	nodesep="1.5"; ranksep=2;
	node [shape=plaintext];
	edge [color=gray];
	"a_truth(truthteller(b))" -> "[]" [labelfontcolor=black,labelfontsize="12",headlabel="Binary Resolution\n{ }",labeldistance="6"];
	"~a_truth(liar(b))" -> "a_truth(truthteller(b))" [labelfontcolor=black,labelfontsize="12",headlabel="Binary Resolution\n{ X_0 <- b }",labeldistance="6"];
	"a_truth(truthteller(c))" -> "~a_truth(liar(b))" [labelfontcolor=black,labelfontsize="12",headlabel="Clausal Simplification\n{ }",labeldistance="6"];
	"~a_truth(liar(c))" -> "a_truth(truthteller(c))" [labelfontcolor=black,labelfontsize="12",headlabel="Binary Resolution\n{ X_0 <- c }",labeldistance="6"];
	"~a_truth(liar(c)) | a_truth(truthteller(b))" -> "~a_truth(liar(c))" [labelfontcolor=black,labelfontsize="12",headlabel="Binary Resolution\n{ }",labeldistance="6"];
	"~a_truth(liar(b)) | ~a_truth(liar(c))" -> "~a_truth(liar(c)) | a_truth(truthteller(b))" [labelfontcolor=black,labelfontsize="12",headlabel="Binary Resolution\n{ X_0 <- b }",labeldistance="6"];
	"~an_answer(X_21)" -> "~a_truth(liar(b)) | ~a_truth(liar(c))" [labelfontcolor=black,labelfontsize="12",headlabel="Binary Resolution\n{ X_21 <- b_and_c_liars }",labeldistance="6"];
	"~a_truth(liar(b)) | ~a_truth(liar(c)) | an_answer(b_and_c_liars)" -> "~a_truth(liar(b)) | ~a_truth(liar(c))" ;
	"a_truth(truthteller(X_0)) | a_truth(liar(X_0))" -> "~a_truth(liar(c)) | a_truth(truthteller(b))" ;
	"~a_truth(truthteller(b)) | ~a_truth(liar(c))" -> "~a_truth(liar(c))" ;
	"~an_answer(X_21)" -> "~a_truth(truthteller(b)) | ~a_truth(liar(c))" [labelfontcolor=black,labelfontsize="12",headlabel="Binary Resolution\n{ X_21 <- b_truthteller_and_c_liar }",labeldistance="6"];
	"~a_truth(truthteller(b)) | ~a_truth(liar(c)) | an_answer(b_truthteller_and_c_liar)" -> "~a_truth(truthteller(b)) | ~a_truth(liar(c))" ;
	"a_truth(truthteller(X_0)) | a_truth(liar(X_0))" -> "a_truth(truthteller(c))" ;
	"~a_truth(liar(b)) | ~a_truth(truthteller(c))" -> "~a_truth(liar(b))" ;
	"~an_answer(X_21)" -> "~a_truth(liar(b)) | ~a_truth(truthteller(c))" [labelfontcolor=black,labelfontsize="12",headlabel="Binary Resolution\n{ X_21 <- b_liar_and_c_truthteller }",labeldistance="6"];
	"~a_truth(liar(b)) | ~a_truth(truthteller(c)) | an_answer(b_liar_and_c_truthteller)" -> "~a_truth(liar(b)) | ~a_truth(truthteller(c))" ;
	"a_truth(truthteller(X_0)) | a_truth(liar(X_0))" -> "a_truth(truthteller(b))" ;
	"~a_truth(truthteller(b))" -> "[]" ;
	"a_truth(truthteller(c))" -> "~a_truth(truthteller(b))" [labelfontcolor=black,labelfontsize="12",headlabel="Clausal Simplification\n{ }",labeldistance="6"];
	"~a_truth(truthteller(b)) | ~a_truth(truthteller(c))" -> "~a_truth(truthteller(b))" ;
	"~an_answer(X_21)" -> "~a_truth(truthteller(b)) | ~a_truth(truthteller(c))" [labelfontcolor=black,labelfontsize="12",headlabel="Binary Resolution\n{ X_21 <- b_and_c_truthtellers }",labeldistance="6"];
	"~a_truth(truthteller(b)) | ~a_truth(truthteller(c)) | an_answer(b_and_c_truthtellers)" -> "~a_truth(truthteller(b)) | ~a_truth(truthteller(c))" ;
}

