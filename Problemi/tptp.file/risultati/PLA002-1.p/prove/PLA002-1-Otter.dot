digraph {
	nodesep="1.5"; ranksep=2;
	node [shape=plaintext];
	edge [color=gray];
	"~at(d,Situation_74)" -> "[]" [labelfontcolor=black,labelfontsize="12",headlabel="Binary Resolution\n{ Situation_74 <- go(d,s0) }",labeldistance="6"];
	"~at(d,Situation_8) | at(b,climb(b,Situation_8))" -> "~at(d,Situation_74)" [labelfontcolor=black,labelfontsize="12",headlabel="Binary Resolution\n{ Situation_17 <- climb(b,Situation_8) }",labeldistance="6"];
	"warm(Situation1_57)" -> "~at(d,Situation_8) | at(b,climb(b,Situation_8))" [labelfontcolor=black,labelfontsize="12",headlabel="Clausal Simplification\n{ Situation1_57 <- Situation_8 }",labeldistance="6"];
	"~at(c,Situation2_51) | warm(Situation1_51)" -> "warm(Situation1_57)" [labelfontcolor=black,labelfontsize="12",headlabel="Binary Resolution\n{ Situation2_51 <- go(c,go(d,s0)) }",labeldistance="6"];
	"~cold(Situation_47) | ~at(c,Situation_47)" -> "~at(c,Situation2_51) | warm(Situation1_51)" [labelfontcolor=black,labelfontsize="12",headlabel="Binary Resolution\n{ Situation_47 <- Situation2_0 }",labeldistance="6"];
	"~cold(Situation_6) | ~at(c,Situation_6) | at(b,skate(b,Situation_6))" -> "~cold(Situation_47) | ~at(c,Situation_47)" [labelfontcolor=black,labelfontsize="12",headlabel="Binary Resolution\n{ Situation_17 <- skate(b,Situation_6) }",labeldistance="6"];
	"~at(b,Situation_17)" -> "~cold(Situation_47) | ~at(c,Situation_47)" ;
	"~at(b,Situation_3) | at(a,walk(a,Situation_3))" -> "~at(b,Situation_17)" [labelfontcolor=black,labelfontsize="12",headlabel="Binary Resolution\n{ S_16 <- walk(a,Situation_3) }",labeldistance="6"];
	"~at(a,S_16)" -> "~at(b,Situation_17)" ;
	"warm(Situation1_0) | cold(Situation2_0)" -> "~at(c,Situation2_51) | warm(Situation1_51)" ;
	"at(c,go(c,go(d,s0)))" -> "warm(Situation1_57)" ;
	"at(d,go(d,s0))" -> "at(c,go(c,go(d,s0)))" [labelfontcolor=black,labelfontsize="12",headlabel="Binary Resolution\n{ Situation_10 <- go(d,s0) }",labeldistance="6"];
	"~at(f,Situation_14) | at(d,go(d,Situation_14))" -> "at(d,go(d,s0))" [labelfontcolor=black,labelfontsize="12",headlabel="Binary Resolution\n{ Situation_14 <- s0 }",labeldistance="6"];
	"at(f,s0)" -> "at(d,go(d,s0))" ;
	"~at(d,Situation_10) | at(c,go(c,Situation_10))" -> "at(c,go(c,go(d,s0)))" ;
	"~warm(Situation_8) | ~at(d,Situation_8) | at(b,climb(b,Situation_8))" -> "~at(d,Situation_8) | at(b,climb(b,Situation_8))" ;
	"~at(b,Situation_17)" -> "~at(d,Situation_74)" ;
	"at(d,go(d,s0))" -> "[]" ;
}

