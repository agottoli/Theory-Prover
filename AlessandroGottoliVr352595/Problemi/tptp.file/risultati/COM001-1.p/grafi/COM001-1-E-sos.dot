digraph {
	nodesep="1.5"; ranksep=2;
	node [shape=plaintext];
	edge [color=gray];
	"~labels(loop,p3)" -> "[]" [labelfontcolor=black,labelfontsize="12",headlabel="Binary Resolution\n{ }",labeldistance="6"];
	"~has(p8,goto(Label_35)) | ~labels(Label_35,p3)" -> "~labels(loop,p3)" [labelfontcolor=black,labelfontsize="12",headlabel="Binary Resolution\n{ Label_35 <- loop }",labeldistance="6"];
	"~succeeds(p3,p8)" -> "~has(p8,goto(Label_35)) | ~labels(Label_35,p3)" [labelfontcolor=black,labelfontsize="12",headlabel="Binary Resolution\n{ Goal_state_2 <- p3, Start_state_2 <- p8 }",labeldistance="6"];
	"~succeeds(p3,Goal_state_17) | ~follows(Goal_state_17,p3)" -> "~succeeds(p3,p8)" [labelfontcolor=black,labelfontsize="12",headlabel="Binary Resolution\n{ Goal_state_17 <- p8 }",labeldistance="6"];
	"~succeeds(p3,Intermediate_state_12) | ~succeeds(Intermediate_state_12,p3)" -> "~succeeds(p3,Goal_state_17) | ~follows(Goal_state_17,p3)" [labelfontcolor=black,labelfontsize="12",headlabel="Binary Resolution\n{ Intermediate_state_12 <- Goal_state_0, Start_state_0 <- p3 }",labeldistance="6"];
	"~succeeds(p3,p3)" -> "~succeeds(p3,Intermediate_state_12) | ~succeeds(Intermediate_state_12,p3)" [labelfontcolor=black,labelfontsize="12",headlabel="Binary Resolution\n{ Goal_state_1 <- p3, Start_state_1 <- p3 }",labeldistance="6"];
	"succeeds(Goal_state_1,Start_state_1) | ~succeeds(Goal_state_1,Intermediate_state_1) | ~succeeds(Intermediate_state_1,Start_state_1)" -> "~succeeds(p3,Intermediate_state_12) | ~succeeds(Intermediate_state_12,p3)" ;
	"succeeds(Goal_state_0,Start_state_0) | ~follows(Goal_state_0,Start_state_0)" -> "~succeeds(p3,Goal_state_17) | ~follows(Goal_state_17,p3)" ;
	"follows(p8,p3)" -> "~succeeds(p3,p8)" ;
	"succeeds(Goal_state_2,Start_state_2) | ~has(Start_state_2,goto(Label_2)) | ~labels(Label_2,Goal_state_2)" -> "~has(p8,goto(Label_35)) | ~labels(Label_35,p3)" ;
	"has(p8,goto(loop))" -> "~labels(loop,p3)" ;
	"labels(loop,p3)" -> "[]" ;
}

