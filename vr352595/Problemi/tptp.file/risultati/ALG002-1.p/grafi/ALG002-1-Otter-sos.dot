digraph {
	nodesep="1.5"; ranksep=2;
	node [shape=plaintext];
	edge [color=gray];
	"product(multiplicative_identity,multiplicative_identity,additive_identity)" -> "[]" [labelfontcolor=black,labelfontsize="12",headlabel="Binary Resolution\n{ }",labeldistance="6"];
	"product(multiplicative_inverse(a),multiplicative_inverse(a),additive_identity)" -> "product(multiplicative_identity,multiplicative_identity,additive_identity)" [labelfontcolor=black,labelfontsize="12",headlabel="Clausal Simplification\n{ }",labeldistance="6"];
	"~greater_than_0(additive_inverse(multiplicative_inverse(a)))" -> "product(multiplicative_inverse(a),multiplicative_inverse(a),additive_identity)" [labelfontcolor=black,labelfontsize="12",headlabel="Binary Resolution\n{ }",labeldistance="6"];
	"~greater_than_0(additive_inverse(multiplicative_inverse(a))) | greater_than_0(additive_inverse(multiplicative_identity))" -> "~greater_than_0(additive_inverse(multiplicative_inverse(a)))" [labelfontcolor=black,labelfontsize="12",headlabel="Binary Resolution\n{ }",labeldistance="6"];
	"greater_than_0(a)" -> "~greater_than_0(additive_inverse(multiplicative_inverse(a))) | greater_than_0(additive_inverse(multiplicative_identity))" [labelfontcolor=black,labelfontsize="12",headlabel="Clausal Simplification\n{ }",labeldistance="6"];
	"~greater_than_0(a) | ~greater_than_0(additive_inverse(multiplicative_inverse(a))) | greater_than_0(additive_inverse(multiplicative_identity))" -> "~greater_than_0(additive_inverse(multiplicative_inverse(a))) | greater_than_0(additive_inverse(multiplicative_identity))" ;
	"product(a,additive_inverse(multiplicative_inverse(a)),additive_inverse(multiplicative_identity))" -> "~greater_than_0(a) | ~greater_than_0(additive_inverse(multiplicative_inverse(a))) | greater_than_0(additive_inverse(multiplicative_identity))" [labelfontcolor=black,labelfontsize="12",headlabel="Binary Resolution\n{ Y_11 <- a, Z_11 <- additive_inverse(multiplicative_inverse(a)), X_11 <- additive_inverse(multiplicative_identity) }",labeldistance="6"];
	"product(a,multiplicative_inverse(a),multiplicative_identity)" -> "product(a,additive_inverse(multiplicative_inverse(a)),additive_inverse(multiplicative_identity))" [labelfontcolor=black,labelfontsize="12",headlabel="Binary Resolution\n{ X_4 <- a, Y_4 <- multiplicative_inverse(a), Z_4 <- multiplicative_identity }",labeldistance="6"];
	"~product(a,a,additive_identity)" -> "product(a,multiplicative_inverse(a),multiplicative_identity)" [labelfontcolor=black,labelfontsize="12",headlabel="Binary Resolution\n{ X_5 <- a }",labeldistance="6"];
	"~product(a,multiplicative_identity,X_1624) | ~product(X_1624,X_1624,additive_identity)" -> "~product(a,a,additive_identity)" [labelfontcolor=black,labelfontsize="12",headlabel="Binary Resolution\n{ X_0 <- a, X_1624 <- a }",labeldistance="6"];
	"greater_than_0(Z_1515) | ~product(a,multiplicative_identity,Z_1515)" -> "~product(a,multiplicative_identity,X_1624) | ~product(X_1624,X_1624,additive_identity)" [labelfontcolor=black,labelfontsize="12",headlabel="Binary Resolution\n{ Z_1515 <- X_7 }",labeldistance="6"];
	"~product(multiplicative_identity,a,X_1456) | greater_than_0(X_1456)" -> "greater_than_0(Z_1515) | ~product(a,multiplicative_identity,Z_1515)" [labelfontcolor=black,labelfontsize="12",headlabel="Binary Resolution\n{ Y_8 <- multiplicative_identity, X_8 <- a, X_1456 <- Z_8 }",labeldistance="6"];
	"~product(multiplicative_identity,Z_1200,X_1200) | ~greater_than_0(Z_1200) | greater_than_0(X_1200)" -> "~product(multiplicative_identity,a,X_1456) | greater_than_0(X_1456)" [labelfontcolor=black,labelfontsize="12",headlabel="Binary Resolution\n{ Z_1200 <- a }",labeldistance="6"];
	"greater_than_0(multiplicative_identity)" -> "~product(multiplicative_identity,Z_1200,X_1200) | ~greater_than_0(Z_1200) | greater_than_0(X_1200)" [labelfontcolor=black,labelfontsize="12",headlabel="Binary Resolution\n{ Y_11 <- multiplicative_identity }",labeldistance="6"];
	"greater_than_0(a)" -> "greater_than_0(multiplicative_identity)" [labelfontcolor=black,labelfontsize="12",headlabel="Clausal Simplification\n{ }",labeldistance="6"];
	"greater_than_0(multiplicative_identity) | ~greater_than_0(a)" -> "greater_than_0(multiplicative_identity)" ;
	"greater_than_0(multiplicative_identity) | product(a,a,additive_identity)" -> "greater_than_0(multiplicative_identity) | ~greater_than_0(a)" [labelfontcolor=black,labelfontsize="12",headlabel="Binary Resolution\n{ X_7 <- a }",labeldistance="6"];
	"greater_than_0(multiplicative_identity) | ~product(X_1085,multiplicative_inverse(a),multiplicative_identity)" -> "greater_than_0(multiplicative_identity) | product(a,a,additive_identity)" [labelfontcolor=black,labelfontsize="12",headlabel="Binary Resolution\n{ X_1085 <- a, X_5 <- a }",labeldistance="6"];
	"greater_than_0(multiplicative_identity) | ~product(multiplicative_inverse(a),Z_921,multiplicative_identity)" -> "greater_than_0(multiplicative_identity) | ~product(X_1085,multiplicative_inverse(a),multiplicative_identity)" [labelfontcolor=black,labelfontsize="12",headlabel="Binary Resolution\n{ Y_8 <- multiplicative_inverse(a), Z_921 <- X_8, Z_8 <- multiplicative_identity }",labeldistance="6"];
	"greater_than_0(multiplicative_identity) | ~product(multiplicative_inverse(a),Z_300,X_300) | product(X_300,X_300,additive_identity)" -> "greater_than_0(multiplicative_identity) | ~product(multiplicative_inverse(a),Z_921,multiplicative_identity)" [labelfontcolor=black,labelfontsize="12",headlabel="Binary Resolution\n{ X_300 <- multiplicative_identity }",labeldistance="6"];
	"greater_than_0(multiplicative_identity) | product(multiplicative_inverse(a),multiplicative_inverse(a),additive_identity)" -> "greater_than_0(multiplicative_identity) | ~product(multiplicative_inverse(a),Z_300,X_300) | product(X_300,X_300,additive_identity)" [labelfontcolor=black,labelfontsize="12",headlabel="Binary Resolution\n{ Y_10 <- multiplicative_inverse(a) }",labeldistance="6"];
	"~greater_than_0(additive_inverse(multiplicative_inverse(a))) | greater_than_0(multiplicative_identity)" -> "greater_than_0(multiplicative_identity) | product(multiplicative_inverse(a),multiplicative_inverse(a),additive_identity)" [labelfontcolor=black,labelfontsize="12",headlabel="Binary Resolution\n{ }",labeldistance="6"];
	"~greater_than_0(additive_inverse(multiplicative_inverse(a))) | greater_than_0(multiplicative_identity) | product(multiplicative_identity,multiplicative_identity,additive_identity)" -> "~greater_than_0(additive_inverse(multiplicative_inverse(a))) | greater_than_0(multiplicative_identity)" [labelfontcolor=black,labelfontsize="12",headlabel="Binary Resolution\n{ }",labeldistance="6"];
	"~greater_than_0(additive_inverse(multiplicative_inverse(a))) | ~greater_than_0(additive_inverse(multiplicative_identity))" -> "~greater_than_0(additive_inverse(multiplicative_inverse(a))) | greater_than_0(multiplicative_identity) | product(multiplicative_identity,multiplicative_identity,additive_identity)" [labelfontcolor=black,labelfontsize="12",headlabel="Binary Resolution\n{ X_9 <- multiplicative_identity }",labeldistance="6"];
	"~greater_than_0(additive_inverse(X_18)) | ~greater_than_0(additive_inverse(Y_18)) | ~product(X_18,Y_18,multiplicative_inverse(a))" -> "~greater_than_0(additive_inverse(multiplicative_inverse(a))) | ~greater_than_0(additive_inverse(multiplicative_identity))" [labelfontcolor=black,labelfontsize="12",headlabel="Binary Resolution\n{ X_18 <- multiplicative_inverse(a), Y_18 <- multiplicative_identity, X_0 <- multiplicative_inverse(a) }",labeldistance="6"];
	"~product(Y_15,Z_15,multiplicative_inverse(a)) | ~greater_than_0(Y_15) | ~greater_than_0(Z_15)" -> "~greater_than_0(additive_inverse(X_18)) | ~greater_than_0(additive_inverse(Y_18)) | ~product(X_18,Y_18,multiplicative_inverse(a))" [labelfontcolor=black,labelfontsize="12",headlabel="Binary Resolution\n{ Y_15 <- additive_inverse(X_2), Z_15 <- additive_inverse(Y_2), Z_2 <- multiplicative_inverse(a) }",labeldistance="6"];
	"~greater_than_0(multiplicative_inverse(a))" -> "~product(Y_15,Z_15,multiplicative_inverse(a)) | ~greater_than_0(Y_15) | ~greater_than_0(Z_15)" [labelfontcolor=black,labelfontsize="12",headlabel="Binary Resolution\n{ X_11 <- multiplicative_inverse(a) }",labeldistance="6"];
	"~product(Y_11,Z_11,X_11) | ~greater_than_0(Y_11) | ~greater_than_0(Z_11) | greater_than_0(X_11)" -> "~product(Y_15,Z_15,multiplicative_inverse(a)) | ~greater_than_0(Y_15) | ~greater_than_0(Z_15)" ;
	"~product(X_2,Y_2,Z_2) | product(additive_inverse(X_2),additive_inverse(Y_2),Z_2)" -> "~greater_than_0(additive_inverse(X_18)) | ~greater_than_0(additive_inverse(Y_18)) | ~product(X_18,Y_18,multiplicative_inverse(a))" ;
	"product(X_0,multiplicative_identity,X_0)" -> "~greater_than_0(additive_inverse(multiplicative_inverse(a))) | ~greater_than_0(additive_inverse(multiplicative_identity))" ;
	"greater_than_0(X_9) | product(X_9,X_9,additive_identity) | greater_than_0(additive_inverse(X_9))" -> "~greater_than_0(additive_inverse(multiplicative_inverse(a))) | greater_than_0(multiplicative_identity) | product(multiplicative_identity,multiplicative_identity,additive_identity)" ;
	"~product(multiplicative_identity,multiplicative_identity,additive_identity)" -> "~greater_than_0(additive_inverse(multiplicative_inverse(a))) | greater_than_0(multiplicative_identity)" ;
	"product(multiplicative_inverse(a),multiplicative_inverse(a),additive_identity) | greater_than_0(additive_inverse(multiplicative_inverse(a)))" -> "greater_than_0(multiplicative_identity) | product(multiplicative_inverse(a),multiplicative_inverse(a),additive_identity)" ;
	"~greater_than_0(multiplicative_inverse(a))" -> "product(multiplicative_inverse(a),multiplicative_inverse(a),additive_identity) | greater_than_0(additive_inverse(multiplicative_inverse(a)))" [labelfontcolor=black,labelfontsize="12",headlabel="Binary Resolution\n{ X_9 <- multiplicative_inverse(a) }",labeldistance="6"];
	"greater_than_0(X_9) | product(X_9,X_9,additive_identity) | greater_than_0(additive_inverse(X_9))" -> "product(multiplicative_inverse(a),multiplicative_inverse(a),additive_identity) | greater_than_0(additive_inverse(multiplicative_inverse(a)))" ;
	"~product(Y_10,Z_10,X_10) | ~product(Y_10,Y_10,additive_identity) | product(X_10,X_10,additive_identity)" -> "greater_than_0(multiplicative_identity) | ~product(multiplicative_inverse(a),Z_300,X_300) | product(X_300,X_300,additive_identity)" ;
	"~product(multiplicative_identity,multiplicative_identity,additive_identity)" -> "greater_than_0(multiplicative_identity) | ~product(multiplicative_inverse(a),Z_921,multiplicative_identity)" ;
	"~product(X_8,Y_8,Z_8) | product(Y_8,X_8,Z_8)" -> "greater_than_0(multiplicative_identity) | ~product(X_1085,multiplicative_inverse(a),multiplicative_identity)" ;
	"product(X_5,multiplicative_inverse(X_5),multiplicative_identity) | product(X_5,X_5,additive_identity)" -> "greater_than_0(multiplicative_identity) | product(a,a,additive_identity)" ;
	"~greater_than_0(X_7) | ~product(X_7,X_7,additive_identity)" -> "greater_than_0(multiplicative_identity) | ~greater_than_0(a)" ;
	"~product(Y_11,Z_11,X_11) | ~greater_than_0(Y_11) | ~greater_than_0(Z_11) | greater_than_0(X_11)" -> "~product(multiplicative_identity,Z_1200,X_1200) | ~greater_than_0(Z_1200) | greater_than_0(X_1200)" ;
	"greater_than_0(a)" -> "~product(multiplicative_identity,a,X_1456) | greater_than_0(X_1456)" ;
	"~product(X_8,Y_8,Z_8) | product(Y_8,X_8,Z_8)" -> "greater_than_0(Z_1515) | ~product(a,multiplicative_identity,Z_1515)" ;
	"~greater_than_0(X_7) | ~product(X_7,X_7,additive_identity)" -> "~product(a,multiplicative_identity,X_1624) | ~product(X_1624,X_1624,additive_identity)" ;
	"product(X_0,multiplicative_identity,X_0)" -> "~product(a,a,additive_identity)" ;
	"product(X_5,multiplicative_inverse(X_5),multiplicative_identity) | product(X_5,X_5,additive_identity)" -> "product(a,multiplicative_inverse(a),multiplicative_identity)" ;
	"~product(X_4,Y_4,Z_4) | product(X_4,additive_inverse(Y_4),additive_inverse(Z_4))" -> "product(a,additive_inverse(multiplicative_inverse(a)),additive_inverse(multiplicative_identity))" ;
	"~product(Y_11,Z_11,X_11) | ~greater_than_0(Y_11) | ~greater_than_0(Z_11) | greater_than_0(X_11)" -> "~greater_than_0(a) | ~greater_than_0(additive_inverse(multiplicative_inverse(a))) | greater_than_0(additive_inverse(multiplicative_identity))" ;
	"~greater_than_0(additive_inverse(multiplicative_identity))" -> "~greater_than_0(additive_inverse(multiplicative_inverse(a)))" ;
	"greater_than_0(multiplicative_identity)" -> "~greater_than_0(additive_inverse(multiplicative_identity))" [labelfontcolor=black,labelfontsize="12",headlabel="Binary Resolution\n{ X_6 <- multiplicative_identity }",labeldistance="6"];
	"~greater_than_0(X_6) | ~greater_than_0(additive_inverse(X_6))" -> "~greater_than_0(additive_inverse(multiplicative_identity))" ;
	"product(multiplicative_inverse(a),multiplicative_inverse(a),additive_identity) | greater_than_0(additive_inverse(multiplicative_inverse(a)))" -> "product(multiplicative_inverse(a),multiplicative_inverse(a),additive_identity)" ;
	"~product(multiplicative_inverse(a),multiplicative_inverse(a),additive_identity) | product(multiplicative_identity,multiplicative_identity,additive_identity)" -> "product(multiplicative_identity,multiplicative_identity,additive_identity)" ;
	"product(multiplicative_inverse(a),a,multiplicative_identity)" -> "~product(multiplicative_inverse(a),multiplicative_inverse(a),additive_identity) | product(multiplicative_identity,multiplicative_identity,additive_identity)" [labelfontcolor=black,labelfontsize="12",headlabel="Binary Resolution\n{ Y_10 <- multiplicative_inverse(a), Z_10 <- a, X_10 <- multiplicative_identity }",labeldistance="6"];
	"product(a,multiplicative_inverse(a),multiplicative_identity)" -> "product(multiplicative_inverse(a),a,multiplicative_identity)" [labelfontcolor=black,labelfontsize="12",headlabel="Binary Resolution\n{ X_8 <- a, Y_8 <- multiplicative_inverse(a), Z_8 <- multiplicative_identity }",labeldistance="6"];
	"~product(X_8,Y_8,Z_8) | product(Y_8,X_8,Z_8)" -> "product(multiplicative_inverse(a),a,multiplicative_identity)" ;
	"~product(Y_10,Z_10,X_10) | ~product(Y_10,Y_10,additive_identity) | product(X_10,X_10,additive_identity)" -> "~product(multiplicative_inverse(a),multiplicative_inverse(a),additive_identity) | product(multiplicative_identity,multiplicative_identity,additive_identity)" ;
	"~product(multiplicative_identity,multiplicative_identity,additive_identity)" -> "[]" ;
}

